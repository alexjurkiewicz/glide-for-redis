# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpcbabushka.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12grpcbabushka.proto\x12\x0cgrpcbabushka\"(\n\x0e\x43onnectRequest\x12\x16\n\x0eserver_address\x18\x01 \x01(\t\",\n\nGetRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\";\n\nSetRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\"!\n\x0c\x43onnectReply\x12\x11\n\tclient_id\x18\x01 \x01(\t\"\x19\n\x08GetReply\x12\r\n\x05value\x18\x01 \x01(\t\"\x1c\n\x08SetReply\x12\x10\n\x08response\x18\x01 \x01(\t2\xc6\x01\n\x07Greeter\x12\x37\n\x03Get\x12\x18.grpcbabushka.GetRequest\x1a\x16.grpcbabushka.GetReply\x12\x37\n\x03Set\x12\x18.grpcbabushka.SetRequest\x1a\x16.grpcbabushka.SetReply\x12I\n\rConnectServer\x12\x1c.grpcbabushka.ConnectRequest\x1a\x1a.grpcbabushka.ConnectReplyb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'grpcbabushka_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CONNECTREQUEST._serialized_start=36
  _CONNECTREQUEST._serialized_end=76
  _GETREQUEST._serialized_start=78
  _GETREQUEST._serialized_end=122
  _SETREQUEST._serialized_start=124
  _SETREQUEST._serialized_end=183
  _CONNECTREPLY._serialized_start=185
  _CONNECTREPLY._serialized_end=218
  _GETREPLY._serialized_start=220
  _GETREPLY._serialized_end=245
  _SETREPLY._serialized_start=247
  _SETREPLY._serialized_end=275
  _GREETER._serialized_start=278
  _GREETER._serialized_end=476
# @@protoc_insertion_point(module_scope)
