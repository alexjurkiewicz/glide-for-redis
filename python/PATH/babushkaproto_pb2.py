# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: PATH/babushkaproto.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18PATH/babushkaproto.proto\x12\rbabushkaproto\"(\n\x0e\x43onnectRequest\x12\x16\n\x0eserver_address\x18\x01 \x01(\x0c\"/\n\nGetRequest\x12\x14\n\x0c\x63\x61llback_idx\x18\x01 \x01(\r\x12\x0b\n\x03key\x18\x02 \x01(\x0c\">\n\nSetRequest\x12\x14\n\x0c\x63\x61llback_idx\x18\x01 \x01(\r\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\r\n\x05value\x18\x03 \x01(\x0c\"!\n\x0c\x43onnectReply\x12\x11\n\tclient_id\x18\x01 \x01(\r\"\x19\n\x08GetReply\x12\r\n\x05value\x18\x01 \x01(\x0c\"E\n\x0c\x43ommandReply\x12\x14\n\x0c\x63\x61llback_idx\x18\x01 \x01(\r\x12\x10\n\x08response\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"B\n\x07Request\x12\x14\n\x0c\x63\x61llback_idx\x18\x01 \x01(\r\x12\x14\n\x0crequest_type\x18\x02 \x01(\r\x12\x0b\n\x03\x61rg\x18\x03 \x03(\tb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'PATH.babushkaproto_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CONNECTREQUEST._serialized_start=43
  _CONNECTREQUEST._serialized_end=83
  _GETREQUEST._serialized_start=85
  _GETREQUEST._serialized_end=132
  _SETREQUEST._serialized_start=134
  _SETREQUEST._serialized_end=196
  _CONNECTREPLY._serialized_start=198
  _CONNECTREPLY._serialized_end=231
  _GETREPLY._serialized_start=233
  _GETREPLY._serialized_end=258
  _COMMANDREPLY._serialized_start=260
  _COMMANDREPLY._serialized_end=329
  _REQUEST._serialized_start=331
  _REQUEST._serialized_end=397
# @@protoc_insertion_point(module_scope)
